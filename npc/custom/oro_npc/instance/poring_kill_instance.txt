//=========== Poring Kill Event ==============================
//============================================================

-	script	Poring Kill Game	-1,{
OnInit:
	bindatcmd("startporinggame",strnpcinfo(0)+"::OnInitEvent",10,99);
end;
OnClock2030:
OnInitEvent:
	if(.ins_id > 0){
		if(playerattached()){
			dispbottom "An instance of Poring Hunt Game is already active", 0x00FF00;
		}
		else {
			debugmes "An instance of Poring Hunt Game is already active";
		}
		end;
	}
	for(.@i = 0; .@i <= getarraysize($TimeEventFlag); .@i++){
		if($TimeEventFlag[.@i] == 0){
			.event_flag_index = .@i;
			break;
		}
	}
	if(.event_flag_index == 0){
		.joinevent_cmdstr$ = "joinevent";
		$TimeEventFlag[0] = 1;
	}
	else {
		.joinevent_cmdstr$ = "joinevent" + (.event_flag_index + 1);
		$TimeEventFlag[.event_flag_index] = 1;
	}
	bindatcmd("joinporinggame", strnpcinfo(0)+"::OnJoinEvent",0,99);
	bindatcmd(.joinevent_cmdstr$, strnpcinfo(0)+"::OnJoinEvent",0,99);
	.ins_id = instance_create("PoringKill Event", IM_NONE);

	if(.ins_id == -4){
		if(playerattached()){
			dispbottom "No free instance!", 0xFF0000;
		}
		else {
			debugmes "No free instance!";
		}
		end;
	}
	else if(.ins_id < 1){
		if(playerattached()){
			dispbottom "Failed to create instance", 0xFF0000;
		}
		else {
			debugmes "Failed to create instance";
		}
		end;
	}

	cleararray .join_char_id[0], 0, getarraysize(.join_char_id);
	deletearray .winner_name$[0], getarraysize(.winner_name$);
	announce "The Poring Hunt Game will start in 2 minutes, to join the game type @joinporinggame or @" + .joinevent_cmdstr$, bc_all, 0x00FFFF;
	.poring_event_status = 1;
	initnpctimer;
	.ins_map_name$ = instance_mapname("int_land", .ins_id);
	.round_counter = 1;
	.num_win = 0;	//counter kung pila ang winners out of 10 rounds
	setmapflag .ins_map_name$, mf_noteleport;
	setmapflag .ins_map_name$, mf_monster_noteleport;
	setmapflag .ins_map_name$, mf_noskill;
	setmapflag .ins_map_name$, mf_noexp;
	setmapflag .ins_map_name$, mf_noexppenalty;
	//setmapflag .ins_map_name$, mf_noitemconsumption;
	setmapflag .ins_map_name$, mf_noloot;
	setmapflag .ins_map_name$, mf_loadevent;
end;
OnTimer60000:
	announce "The Poring Hunt Game will start in 1 minute, to join the game type @joinporinggame or @" + .joinevent_cmdstr$, bc_all, 0x00FFFF;
end;
OnTimer120000:
	.poring_event_status = 2;
	announce "A total of " + getarraysize(.join_char_id) + " players have registered to join the game." +
		"The Poring Hunt Game is Starting, teleporting participants to Game Map instance.", bc_all, 0x00FFFF;
	
	for(.@i = 0; .@i < getarraysize(.join_char_id); .@i++){
		if(isloggedin(convertpcinfo(.join_char_id[.@i], CPC_ACCOUNT), .join_char_id[.@i])){
			.@ret = instance_enter("PoringKill Event", -1, -1, .join_char_id[.@i], .ins_id);
			switch(.@ret){
				case IE_NOMEMBER: .@retStr$ = "No Member";
					break;
				case IE_NOINSTANCE: .@retStr$ = "No Instance";
					break;
				case IE_OTHER: .@retStr$ = "Other Error";
					break;
				case IE_OK: .@retStr$ = "OK"; continue;
					break;
			}
			debugmes "Instance Enter return: " + .@retStr$;
		}
	}
end;
OnTimer125000:
	mapannounce .ins_map_name$, "Round " + .round_counter + " starts in 5",bc_map, 0xFFFF00, FW_BOLD, 20;
end;
OnTimer126000:
	mapannounce .ins_map_name$, "Round " + .round_counter + " starts in 4",bc_map, 0xFFFF00, FW_BOLD, 20;
end;
OnTimer127000:
	mapannounce .ins_map_name$, "Round " + .round_counter + " starts in 3",bc_map, 0xFFFF00, FW_BOLD, 20;
end;
OnTimer128000:
	mapannounce .ins_map_name$, "Round " + .round_counter + " starts in 2",bc_map, 0xFFFF00, FW_BOLD, 20;
end;
OnTimer129000:
	mapannounce .ins_map_name$, "Round " + .round_counter + " starts in 1",bc_map, 0xFFFF00, FW_BOLD, 20;
end;
OnTimer130000:
	mapannounce .ins_map_name$, "GO!!",bc_map, 0xFFFF00, FW_BOLD, 30;
	callsub SummonPoring;
end;
OnTimer190000:
	if(.round_counter < 10){
		mapannounce .ins_map_name$, "Time's Up! No one killed the target monster this round. Don't worry you still have a chance next round.",bc_map;
		callsub ResetEvent;
	}
	else {
		killmonster .ins_map_name$, "All";
		callsub AnnounceWinners;
	}
end;
OnTimer730000:
	instance_announce .ins_id, "This Instance Map will be Closed in 30 seconds and you all will be teleported out.", 0, 0x00FFFF, FW_NORMAL, 20;
end;
OnTimer760000:
	instance_destroy .ins_id;
	unbindatcmd "joinporinggame";
	unbindatcmd .joinevent_cmdstr$;
	$TimeEventFlag[.event_flag_index] = 0;
	.ins_id = 0;
	.poring_event_status = 0;
	.poring_found = 0;
	.num_win = 0;
	stopnpctimer;
end;
OnJoinEvent:
	if(.poring_event_status == 0){
		dispbottom "It's not yet the time to join the game", 0x00FFFF;
		end;
	}
	else if(.poring_event_status == 2){
		dispbottom "Registration for the game has ended", 0x00FFFF;
		end;
	}

	.@num = getarraysize(.join_char_id);
	.@char_id = getcharid(0);
	for(.@i = 0; .@i < .@num; .@i++){
		if(.join_char_id[.@i] == .@char_id){
			dispbottom "You've already joined the Poring Hunt Game, you will be teleported to the instance map in " 
				+ (120000 - getnpctimer(0)) / 1000 + " seconds...", 0x00FF00;
			end;
		}
	}
	.join_char_id[.@num] = .@char_id;
	dispbottom "You've joined the Poring Hunt Game, you will be teleported to the instance map in " 
		+ (120000 - getnpctimer(0)) / 1000 + " seconds...", 0x00FF00;
end;
OnPCLoadMapEvent:
	if(strcharinfo(3) != .ins_map_name$){
		end;
	}
	sleep2 500;
	specialeffect2 EF_INCAGILITY;
	sc_start SC_INCREASEAGI,300000,10;
	specialeffect2 EF_BLESSING;
	sc_start SC_BLESSING,300000,10;
	percentheal 100, 100;

	if(.round_counter > 1){
		end;
	}
	announce "Welcome to Poring Hunt Game. To win the game you only need to kill the only monster named [Poring] in One(1) minute." +
		" But becareful because when you killed monsters with different name, you will die! This game have 10 rounds so GOOD LUCK!!!", bc_self, 0xFFFF00, FW_NORMAL, 14;
end;
SummonPoring:
	setarray .poring_name$[1],
		"P0R1NG",
		"Pporing",
		"PoringG",
		"Porign",
		"Boring",
		"Poning",
		"Borign",
		"Boriing",
		"Poriing",
		"Boning",
		"Pooing",
		"Ponring",
		"Broing",
		"Proing",
		"PorRing";
	setarray .poring_id[1],
		1002,	//poring
		1113,	//drops
		1031,	//poporing
		1242,	//marin
		1894;	//pouring
	.@poring_num = cap_value(getmapusers(.ins_map_name$) * 5 + 95, 100, 150);
	for(.@i = 0; .@i < .@poring_num; .@i++){
		areamonster .ins_map_name$, 50, 87, 97, 49, .poring_name$[rand(1,15)], .poring_id[rand(1,5)], 1, strnpcinfo(0) + "::OnFakePoring";
		setunitdata $@mobid[0],UMOB_HP,1;
		setunitdata $@mobid[0],UMOB_MAXHP,1;
	}

	areamonster .ins_map_name$, 50, 87, 97, 49, "Poring", .poring_id[rand(1,5)], 1, strnpcinfo(0) + "::OnTruePoring";
	.poring_gid = $@mobid[0];
	setunitdata .poring_gid,UMOB_HP,1;
	setunitdata .poring_gid,UMOB_MAXHP,1;
	mapannounce .ins_map_name$, "Summoned " + getmapunits(BL_MOB,.ins_map_name$) + " monsters.",bc_map;
end;
ResetEvent:
	if(getmapusers(.ins_map_name$) == 0){
		callsub AnnounceWinners;
		end;
	}
	.round_counter++;
	setnpctimer 120001;
	killmonster .ins_map_name$, "All";
	
	sleep 3000;
	instance_warpall .ins_map_name$, 75, 93, .ins_id;
	.poring_found = 0;
end;
AnnounceWinners:
	if(.num_win == 0){
		announce "Poring Hunt Game is Over! Sadly, nobody won throughout the "+ .round_counter + " rounds of the game.", 0;
		setnpctimer 729999;
		end;
	}
	//End of GAME, list all winning players and rewards
	mapannounce .ins_map_name$, "GAME OVER. Rewards will be given to winning player/s in 5 seconds.", bc_map;
	
	sleep 5000;

	.@message$ = "List of Player/s won after "+ .round_counter + " rounds of Poring Hunt Game";
	for(.@i = 1; .@i < getarraysize(.winner_name$); .@i++){
		.@message$ += "\n -->> " + .winner_name$[.@i];
		.@acc_id = convertpcinfo(.winner_name$[.@i], CPC_ACCOUNT);
		if(.@acc_id == 0){
			continue;
		}
		getitem	7199, 5, .@acc_id;
	}
	announce .@message$, 0;
	setnpctimer 729999;
end;
OnTruePoring:
	if(playerattached() == 0){
		end;
	}
	.poring_found = 1;
	instance_announce .ins_id, "Congratulations to " + strcharinfo(0) + " for winning the round " + .round_counter +
		" of Poring Hunt Game.", bc_map;
	.num_win++;
	setarray .winner_name$[.num_win], strcharinfo(0);
	if(.round_counter < 10){
		callsub ResetEvent;
	}
	else{
		killmonster .ins_map_name$, strnpcinfo(0) + "::OnFakePoring";
		callsub AnnounceWinners;
	}
end;
OnFakePoring:
	if(playerattached() == 0){
		end;
	}
	.@num_player = getmapusers(.ins_map_name$);
	.@player_acc = convertpcinfo(strcharinfo(0),CPC_ACCOUNT);
	if(!isdead(.@player_acc)){
		percentheal -100,0;
		.@num_player = getmapunits(BL_PC, .ins_map_name$, .@player_name$[0]);
		for(.@i = 0; .@i < getarraysize(.@player_name$); .@i++){
			.@player_acc = convertpcinfo(.@player_name$[.@i],CPC_ACCOUNT);
			if(isdead(.@player_acc))
				.@num_player--;
		}
		mapannounce .ins_map_name$, "Player [" + strcharinfo(0) + "] is dead for killing the wrong monster. " +
			"Remaining number of player/s " + .@num_player, bc_map;
	}
	
	if(.poring_found == 1){
		end;
	}
	if(.@num_player == 0 && .round_counter < 10){
		mapannounce .ins_map_name$, "All Players Dead. The Game will Reset in a few seconds." , bc_map;
		callsub ResetEvent;
	}
	//ELSE IF end of Game, list all winning players and rewards
	else if(.@num_player == 0 && .round_counter == 10){
		killmonster .ins_map_name$, "All";
		callsub AnnounceWinners;
	}
end;
}
