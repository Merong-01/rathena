//====== Custom Hunting Quest with Mob Card Reward ===========
//============================================================
prontera,163,186,3	script	Sakura	4_F_BERRYTEA,{
	.@npcname$ = "[Card Captor - Sakura]";
	
	if(sakura_quest_state > 1){
		callfunc "Sakura_Ongoing", .@npcname$, .questTargetNum;
	}
	else if(sakura_quest_cd > gettimetick(2)){
		callfunc "Sakura_Cooldown", .@npcname$;
	}
	else if(sakura_quest_state == 1){
		mes .@npcname$;
		mes "Oh! Hello there...";
		mes "Do you want to try the quest again?";
		next;
		
		.@sel = select("Let me take the quest:Maybe next time");
	}
	else {
		mes .@npcname$;
		mes "Oh! Hello there...";
		mes "You must be one of those people!";
		mes "You know, those people who can't seem to pick up cards...";
		mes "No matter how 'long' they hunt mobs.";
		next;
		
		mes .@npcname$;
		mes "Don't worry anymore, as long as you accept my quest,";
		mes "You are guaranted to get the card of the monster you are hunting.";
		mes "Of course, you have to hunt " + .questTargetNum;
		mes " of the said monster for you to get the card.";
		mes "What do you think, do you want to try?";
		next;
		
		.@sel = select("Let me do the quest!:Nah! I am not one of those people.");
	}
	
	.@mob_id = 0;
	switch(.@sel){
		case 1: mes .@npcname$;
				mes "Great! You just have to tell me the monster of the card that you want.";
				next;
				//input .@mob_id;
				input .@mob_name$;
			break;
		default: mes .@npcname$;
				 mes "Oh, well...";
				 mes "If you say so.";
				 close;
			break;
	}
	
	if(charisalpha(.@mob_name$, 0) == 1){
		.@mob_id = getmonsterinfo(.@mob_name$, MOB_ID);
	}
	else {
		.@mob_id = atoi(.@mob_name$);
	}
	
	if(.@mob_id == 0){
		mes .@npcname$;
		mes "What did you say? " + .@mob_name$;
		mes "Did you change your mind?";
		mes "You can talk to me anytime if you want the quest again.";
		end;
	}
	else if(.@mob_id == -1){
		mes .@npcname$;
		mes "I am sorry, but...";
		mes "I don't know about the monster you are looking for...";
		mes "Please check if you had provided the correct name.";
		end;
	}
	
	.@ret = getmobdrops(.@mob_id);
	
	
	if(.@ret == 0){
		mes .@npcname$;
		mes "I am sorry, but...";
		mes "there is no such monster in my list.";
		mes "Please check if you had provided the correct mob id.";
		end;
	}
	
	.@mobDropsCount = $@MobDrop_count;
	copyarray .@mobDropItem[0],$@MobDrop_item[0],.@mobDropsCount;
	
	sakura_quest_state = 2;
	for(.@i = 0; .@i < .@mobDropsCount; .@i++){
		.@res = compare(getitemname(.@mobDropItem[.@i]), "card");
		if(.@res == 1){
			sakura_target_id = .@mob_id;
			sakura_hunt_count = 0;
			sakura_reward_id = .@mobDropItem[.@i];
			CARD_ITEM_ID = 0;
			callfunc "Sakura_Start", .@mob_id;
			break;
		}
	}
	
	mes .@npcname$;
	mes "That monster doesn't drop cards.";
	mes "Try a different one.";
	sakura_quest_state = 1;
	end;

OnInit:
	.questTargetNum = 5000;
	.coolDownDelay = (3600 * 20);
	end;

OnNPCKillEvent:
	if(sakura_quest_state == 2 && sakura_target_id == killedrid){
		dispbottom "You killed " + strmobinfo(1,killedrid) + 
					", " + ++sakura_hunt_count + " out of " + .questTargetNum;
		if(CARD_ITEM_ID == sakura_reward_id){
			dispbottom "Lucky You!! You got the card after all.";
			sakura_quest_state = 0;
			sakura_hunt_count = 0;
			sakura_quest_cd = gettimetick(2) + .coolDownDelay; //20 hours
		}
		
		if(sakura_hunt_count >= .questTargetNum){
			getitem(sakura_reward_id, 1);
			announce "Congrats!! " + strcharinfo(0) + 
				" just received a " + getitemname(sakura_reward_id) + 
				" after finishing a Sakura Quest", bc_blue|bc_all;
			sakura_quest_state = 1;
			sakura_quest_cd = gettimetick(2) + .coolDownDelay; //20 hours
			dispbottom "Sakura: Card Captor Quest Successfully Completed!", 0x00FF00;
		}
	}
	end;
}

function	script	Sakura_Start	{
	set .@monster_id, getarg(0);
	
	mes "[Card Captor - Sakura]";
	mes "You can now start hunting " + getmonsterinfo(.@monster_id, MOB_NAME);
	close2;
	
	dispbottom "Sakura: Card Captor Quest Started!", 0x00FF00;
	end;
}

function	script	Sakura_Ongoing	{
	.@npcname$ = getarg(0);
	.@qTargetNum = getarg(1);
	
	mes "[Card Captor - Sakura]";
	mes "How was your hunting? Not done yet?";
	mes "It seems that you have hunted " + sakura_hunt_count + 
		" out of " + .@qTargetNum + " " + strmobinfo(1, sakura_target_id);
	mes "Do you need me for something?";
	next;
	
	select("Nothing...I was just passing by:I want to cancel my sakura quest");
	if(@menu == 1){
		mes "[Card Captor - Sakura]";
		mes "Keep it up! I am sure you will finish it soon.";
		close;
	}
	
	mes "[Card Captor - Sakura]";
	mes "I have to ask for you to give me 2 " + mesitemlink(7199) + " to cancel the Sakura Quest.";
	mes "Are you sure you want to cancel your quest?";
	next;
	select("I am sure!:No, I will think about it again");
	
	if(@menu == 1){
		if(countitem(7199) < 2){
			mes .@npcname$;
			mes "I am sorry but it seems you don't have enough " + mesitemlink(7199);
			mes "Please come back when you have enough coins.";
			close;
		}
		sakura_quest_state = 1;
		sakura_hunt_count = 0;
		delitem 7199, 2;
		mes .@npcname$;
		mes "I understand... you can always come back to take another quest.";
		close2;
		dispbottom "Sakura: Card Captor Quest Cancelled!", 0x00FF00;
		end;
	}
	mes .@npcname$;
	mes "Feel free to talk to me again if you need anything regarding the quest.";
	end;
}

function	script	Sakura_Cooldown	{
	.@npcname$ = getarg(0);
	set .@timeInStr$, callfunc ("F_gettimestr", (sakura_quest_cd - gettimetick(2)));
	mes .@npcname$;
	mes "I am sorry, but you already have completed a Sakura Quest today.";
	mes "If you want to take the quest again, please comeback ";
	mes "after " + .@timeInStr$ + " from now.";
	end;
}
