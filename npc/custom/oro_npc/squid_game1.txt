//====== Squid Game Parody 1 =================================
//============================================================
//====== Created by Merong of ProjectOvergearedRO ============
//====== Last update 20240804 ================================
-	script	SquidGame1	-1,{
OnInit:
	bindatcmd("startglasstilegame",strnpcinfo(0)+"::OnInitGame",99,99);
end;
//OnClock2130:
//OnHour21:
OnInitGame:
	if(.ins_id > 0){
		if(playerattached()){
			dispbottom "An instance of Emperium Arena is already active", 0x00FF00;
		}
		else {
			debugmes "An instance of Emperium Arena is already active";
		}
		end;
	}
	.test_flag = .@atcmd_parameters$[0];
	if(.test_flag == 1){
		.target = bc_self;
		attachnpctimer;
	}
	else {
		.target = bc_all;
	}
	for(.@i = 0; .@i <= getarraysize($TimeEventFlag); .@i++){
		if($TimeEventFlag[.@i] == 0){
			.event_flag_index = .@i;
			break;
		}
	}
	if(.event_flag_index == 0){
		.joinevent_cmdstr$ = "joinevent";
		$TimeEventFlag[0] = 1;
	}
	else {
		.joinevent_cmdstr$ = "joinevent" + (.event_flag_index + 1);
		$TimeEventFlag[.event_flag_index] = 1;
	}
	bindatcmd("joinglasstilegame", strnpcinfo(0)+"::OnJoinGame",0,99);
	bindatcmd(.joinevent_cmdstr$, strnpcinfo(0)+"::OnJoinGame",0,99);
	.ins_id = instance_create("Glass Tile", IM_NONE);

	if(.ins_id == -4){
		if(playerattached()){
			dispbottom "No free instance!", 0xFF0000;
		}
		else {
			debugmes "No free instance!";
		}
		end;
	}
	else if(.ins_id < 1){
		if(playerattached()){
			dispbottom "Failed to create instance", 0xFF0000;
		}
		else {
			debugmes "Failed to create instance";
		}
		end;
	}

	cleararray .join_char_id[0], 0, getarraysize(.join_char_id);
	announce "The Glass Tile Mini Game will start in 2 minutes, to join the game type @joinglasstilegame or @" + .joinevent_cmdstr$, .target, 0x00FFFF;
	.starting_game = 1;
	initnpctimer;
end;
OnTimer60000:
	announce "The Glass Tile Mini Game will start in 1 minute, to join the game type @joinglasstilegame or @" + .joinevent_cmdstr$, .target, 0x00FFFF;
end;
OnTimer120000:
	.starting_game = 2;
	for(.@i = 0; .@i < getarraysize(.join_char_id); .@i++){
		if(isloggedin(convertpcinfo(.join_char_id[.@i], CPC_ACCOUNT), .join_char_id[.@i])){
			instance_enter("Glass Tile", -1, -1, .join_char_id[.@i], .ins_id);
		}
	}
	announce "A total of " + getarraysize(.join_char_id) + " players have registered to join the game." +
		"The Glass Tile Mini Game is Starting, teleporting participants to the Mini Game instance", .target, 0x00FFFF;
end;
OnTimer725000:
	instance_announce .ins_id, "This Instance Map will be Closed in 30 seconds and you all will be teleported out.", bc_map, 0x00FFFF, FW_NORMAL, 20;
end;
OnTimer755000:
OnTimerQuit:
	instance_destroy .ins_id;
end;
OnInstanceEnd:
	.ins_id = 0;
	unbindatcmd "joinglasstilegame";
	unbindatcmd .joinevent_cmdstr$;
	$TimeEventFlag[.event_flag_index] = 0;
	.starting_game = 0;
	stopnpctimer;
	detachnpctimer;
end;
OnJoinGame:
	if(.starting_game == 0){
		dispbottom "It's not yet the time to join the game", 0xFF0000;
		end;
	}
	else if(.starting_game == 2){
		dispbottom "Registration for the mini game has ended", 0xFF0000;
		end;
	}

	.@num = getarraysize(.join_char_id);
	.@char_id = getcharid(0);
	for(.@i = 0; .@i < .@num; .@i++){
		if(.join_char_id[.@i] == .@char_id){
			dispbottom "You've already joined the Glass Tile mini game, you will be teleported to the intance map in " 
				+ (120000 - getnpctimer(0)) / 1000 + " seconds...", 0x00FF00;
			end;
		}
	}
	.join_char_id[.@num] = .@char_id;
	@glasstile_p = 0;
	@gtiletrapped = 0;
	dispbottom "You've joined the Glass Tile mini game, you will be teleported to the intance map in " 
		+ (120000 - getnpctimer(0)) / 1000 + " seconds...", 0x00FF00;
end;
}

1@tnm1,115,24,3	script	Employee::SGNPC	449,3,4,{
end;
OnTouch:
	if(getgmlevel()){
		end;
	}
	if(@glasstile_p == 0){
		@glasstile_p = 1;
		if(.etouch < 5){
			npctalk "Good job for arriving here safely, here are some hourly coins. But this is only the first level, you can receive more hourly coins at next levels.";
			getitem 7199,3; //Hourly Coin
			.etouch++;
			announce "Congratulations to player [" + strcharinfo(0) + "]  for passing first level and winning 3 "+ getitemname(7199) +"s in today's Glass Tile Mini Game ", 0x0000FF;
		}
		else {
			npctalk "Sorry, But I'm out of Hourly Coins. This is only the first level, you can receive more hourly coins at next levels.";
		}
	}
	else if(strnpcinfo(0) == "Team Leader" && @glasstile_p == 1){
		@glasstile_p = 2;
		if(.tltouch < 5){
			npctalk "Impressive! Here are some Horly Coins, There is only the last level left.";
			getitem 7199,4; //Hourly Coin
			.tltouch++;
			announce "Congratulations to player [" + strcharinfo(0) + "]  for passing second level and winning 4 "+ getitemname(7199) +"s in today's Glass Tile Mini Game ", 0x0000FF;
		}
		else {
			npctalk "Sorry, But I'm out of Hourly Coins. There is only the last level left so you better hurry";
		}
	}
	else if(strnpcinfo(0) == "Manager" && @glasstile_p == 2){
		@glasstile_p = 3;
		if(.mtouch < 5){
			npctalk "Congratulations! You manage to arrive here safely.";
			getitem 7199,5; //Hourly Coin
			.mtouch++;
			announce "Congratulations to player [" + strcharinfo(0) + "]  for reaching the end and winning 5 "+ getitemname(7199) +"s in today's Glass Tile Mini Game ", bc_all, 0x00FFFF;
			if(.mtouch == 1){
				detachnpctimer "SquidGame1";
				setnpctimer 724999, "SquidGame1";
			}
		}
		else {
			npctalk "Sorry, But I'm out of Hourly Coins. Better luck next time!";
		}
	}
end;
OnInit:
	disablenpc;
end;
OnInstanceDestroy:
	.etouch = 0;
	.tltouch = 0;
	.mtouch = 0;
end;
}

1@tnm1,140,24,3	duplicate(SGNPC)	Team Leader	453,3,4
1@tnm1,157,24,3	duplicate(SGNPC)	Manager	451,3,4

1@tnm1,96,20,0	script	01_gc_01#1::GameCell	139,0,0,{
end;
OnInit:
	disablenpc;
end;
OnInstanceInit:
	.@npc_name$ = strnpcinfo(1);
	.@random_num = rand(0,2);
	getmapxy(.@mapname$,.@mapxkor,.@mapykor,BL_NPC);
	
	if(.@random_num == 2){
		specialeffect EF_GLASSWALL;
	}
	else if(.@random_num == 1){
		specialeffect EF_GLASSWALL;
	}
	else {
		specialeffect EF_BOTTOM_FOGWALL;
	}
end;
}

1@tnm1,90,20,0	script	Squid Game Controller	-1,{
OnInit:
	disablenpc;
end;
OnInstanceInit:
	setmapflag strnpcinfo(4), mf_noskill;
	setmapflag strnpcinfo(4), mf_noitemconsumption;
	initnpctimer;
end;
OnInstanceDestroy:
	stopnpctimer;
	donpcevent "SquidGame1::OnInstanceEnd";
end;
OnTimer123000:
	instance_announce 0, "Reach the other end of the map within 10 minutes, the first 5 players to pass each level will receive 3/4/5" + getitemname(7199), 0;
end;
OnTimer213000:
	instance_announce 0, "1 minute and 30 seconds has passed, summoning monsters to encourage everyone", 0;
	switch(rand(1,2)){
		case 1: monster strnpcinfo(4), 92, 24, "Hunter Fly", 1422, 5;
			break;
		case 2: monster strnpcinfo(4), 92, 24, "Gas Cloud", "NOXIOUS", 5;
			break;
	}
end;
OnTimer373000:
	instance_announce 0, "4 minutes and 10 seconds has passed, summoning more monsters to encourage everyone", 0;
	switch(rand(1,2)){
		case 1: monster strnpcinfo(4), 116, 24, "Hunter Fly", 1422, 5;
			break;
		case 2: monster strnpcinfo(4), 116, 24, "Gas Cloud", "NOXIOUS", 5;
			break;
	}
end;
OnTimer523000:
	instance_announce 0, "6 minutes and 40 seconds has passed, summoning more monsters to encourage everyone", 0;
	switch(rand(1,2)){
		case 1: monster strnpcinfo(4), 141, 24, "Hunter Fly", 1422, 5;
			break;
		case 2: monster strnpcinfo(4), 141, 24, "Gas Cloud", "NOXIOUS", 5;
			break;
	}
end;
OnTimer725000:
	instance_announce 0, "10 minutes has passed, the Game is Over!", 0;
end;
}
